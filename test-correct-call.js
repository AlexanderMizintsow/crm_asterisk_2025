import { io } from "socket.io-client";

console.log("üß™ –¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–≤–æ–Ω–∫–∞");
console.log("üéØ –ü—Ä–æ–≤–µ—Ä—è–µ–º: –∑–≤–æ–Ω–æ–∫ –Ω–∞ 777 –î–û–õ–ñ–ï–ù –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ò–≤–∞–Ω—É (–Ω–æ–º–µ—Ä 777)");

const socket = io("http://localhost:3771");
let userId = 14; // –ò–≤–∞–Ω (–Ω–æ–º–µ—Ä 777)
let notifications = 0;

socket.on("connect", () => {
  console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ");
  socket.emit("authenticate", { userId });
});

socket.on("authenticated", () => {
  console.log("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
  console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ò–≤–∞–Ω (ID: 14, –Ω–æ–º–µ—Ä: 777)");

  setTimeout(() => {
    console.log("\nüìû –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–≤–æ–Ω–æ–∫ –Ω–∞ –Ω–æ–º–µ—Ä 777 (–¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –ò–≤–∞–Ω)");
    console.log("üìã –î–∞–Ω–Ω—ã–µ –∑–≤–æ–Ω–∫–∞:", {
      caller_number: "+7 (495) 123-45-67",
      receiver_number: "777",
      assigned_user_id: 14, // –ò–≤–∞–Ω
    });

    const testCall = {
      caller_number: "+7 (495) 123-45-67",
      receiver_number: "777",
      timestamp: new Date().toISOString(),
      status: "incoming",
      caller_company_name: "–û–û–û –¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è",
    };

    socket.emit("incoming-call", testCall);
    console.log("üì§ –ó–≤–æ–Ω–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      console.log(`\nüîç –†–ï–ó–£–õ–¨–¢–ê–¢: –ø–æ–ª—É—á–µ–Ω–æ ${notifications} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);

      if (notifications === 1) {
        console.log("‚úÖ –¢–ï–°–¢ –ü–†–û–®–ï–õ! –ò–≤–∞–Ω –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–≤–æ–Ω–∫–µ –Ω–∞ 777");
        console.log("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∑–≤–æ–Ω–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç");
        process.exit(0);
      } else {
        console.log(
          `‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–®–ï–õ! –ò–≤–∞–Ω –ø–æ–ª—É—á–∏–ª ${notifications} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∑–≤–æ–Ω–∫–µ –Ω–∞ 777`
        );
        console.log("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π –∑–≤–æ–Ω–∫–æ–≤");
        process.exit(1);
      }
    }, 5000);
  }, 1000);
});

socket.on("incoming-call", (call) => {
  notifications++;
  console.log(`üìû –ü–æ–ª—É—á–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ #${notifications}:`, {
    id: call.id,
    caller: call.caller_number,
    receiver: call.receiver_number,
    assigned_user_id: call.assigned_user_id,
  });
});

socket.on("connect_error", (error) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", error.message);
  process.exit(1);
});

socket.on("error", (error) => {
  console.error("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∫–µ—Ç–∞:", error);
});

socket.on("disconnect", (reason) => {
  console.log("üîå –û—Ç–∫–ª—é—á–µ–Ω–∏–µ:", reason);
});

// –¢–∞–π–º–∞—É—Ç
setTimeout(() => {
  console.log("\n‚è∞ –¢–∞–π–º–∞—É—Ç —Ç–µ—Å—Ç–∞");
  process.exit(1);
}, 10000);
